name: CI/CD pipeline for MSSQL Server using GitHub Actions
on:
  push:
    branches: [ main ]
env:
  AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}

jobs:
  BuildDacpac:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3.3.0
      
      - name: Build Database project
        run: |
          dotnet build --configuration Release /p:NetCoreBuild=true

      - name: Zip the deployment package
        shell: powershell
        run: Compress-Archive -Path "D:\a\sql-server-cicd-demo\sql-server-cicd-demo\" -DestinationPath "D:\a\sql-server-cicd-demo\sql-server-cicd-demo\sql-server-db.zip"
      
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
           
      - name: Publish the artifacts to S3
        shell: cmd
        run: |
          aws s3 cp D:\a\sql-server-cicd-demo\sql-server-cicd-demo\sql-server-db.zip s3://${{ env.AWS_BUCKET_NAME }}/sql-server-cicd/

# Deploy dacpac job
  DeploySQL2022Updates:
    needs: BuildDacpac
    runs-on: [ self-hosted, Windows, X64, sql-server-cicd-demo ]
    steps:
      - name: Print the server IP for deploy job
        shell: powershell
        run: |
          $privateIp = $null
          $publicIp = $null
          if ($privateIp -eq $null) {
            try {
                $privateIp = Invoke-RestMethod -Uri "http://169.254.169.254/latest/meta-data/local-ipv4" -ErrorAction Stop
                echo "The deploy job server IP (private) is $privateIp"
            } catch {
                echo "Unable to retrieve private IP address."
            }
          } elseif ($publicIp -eq $null) {
              try {
                  $publicIp = Invoke-RestMethod -Uri "http://169.254.169.254/latest/meta-data/public-ipv4" -ErrorAction Stop
                  echo "The deploy job server IP (public) is $publicIp"
              } catch {
                  echo "Unable to retrieve public IP address."
              }
          } else {
              echo "Unable to retrieve either private or public IP address."
          }
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Download the zip file from S3 to EC2 folder
        shell: powershell
        run: |
          C:\"Program Files"\Amazon\AWSCLIV2\aws s3 cp s3://${{ env.AWS_BUCKET_NAME }}/sql-server-cicd/sql-server-db.zip "C:\sql-server-cicd\sql-server-cicd\"
      
      - name: Unzipping the Zip file
        shell: powershell
        run: Expand-Archive -Path "C:\sql-server-cicd\sql-server-cicd\sql-server-db.zip" -DestinationPath "C:\sql-server-cicd\sql-server-cicd\sql-server-cicd-db" -Force
      
      # - name: Deploy DACPAC to AWS RDS
      #   run: |
      #     ./sqlpackage/sqlpackage /a:Publish /tsn:${{ env.DB_ENDPOINT }} /tdn:${{ env.DB_NAME }} /tu:${{ env.DB_USERNAME }} /tp:${{ env.DB_PASSWORD }}/sf:YourProjectName\bin\Release\YourDatabaseName.dacpac
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     DB_ENDPOINT: ${{ secrets.DB_ENDPOINT }}
      #     DB_NAME: ${{ secrets.DB_NAME }}
      #     DB_USERNAME: ${{ secrets.DB_USERNAME }}
      #     DB_PASSWORD: ${{ secrets.DB_PASSWORD }}